PQC key encapsulation mechanism (KEM) using
OpenQuantumSafe.org liboqs-java library
KEM algorithm: NTRU-HRSS-701

*** generate a key pair for client=receiver and server=sender ***
generated private key length: 1450
generated public key length:  1138
private and public key for server and client saved to file

* * * generate the keyToEncrypt with the public key of the recipient * * *
length of the received clientPublicKey: 1138
encryptedKey length: 1138 data: cd85fea371397423cb2ce861e1c4f62e035288eda5aee7d73b617dbbc025d4a98aa2a4d81deb6760b02698f191c0bcc7cc2417a26639dad834a588018c1d2cfbba8f1085d3b53000d7b92990cdb963153eb700218b5a071d9be24760733728f9bbffd208cd162a1e3280f1aa5435a44de70c3be32c2a24e2dbe5af056f6c7319fd84a79c62bc997af347bd4e063c840c4e589a5a8f9c2a2b743c6b3768abd3369121ca7811ea3f5fbb36b8893e69086a152c41ffc9c15fbc103598da134de9a17bcd76a78b713168cb5e08f06e591eb2b21e2dcdcf82a147aea93e5dde03a7bbee7a4f288b3c6f196adb3f051fcefaa47336c28f85001cf6c881369885f72c631cde4a941fe59ec0ed80b61dd6f854e499cb3fe630373b133f5a38905732de204c56ed25fb27cfd458dd7175694d6912d194be0b6c21ace4b093d7640b0ef49ad19fece252edd5695bd5807b3148eebab8229e243b46a7d3b1975be9d530c8590f4434fb85611931cbfbc9c6adc95634f6c43901ef7117208287e4c3d5248fd332b68df7521c7ac42ff067f24b339733730f81bb1d46f9f1a287c3c8b8093e5d266484b4d19c96a072df14f9ea91fdbb736284fe6914ac1f9c55d2c9a6066d36c5189a3dc8250213665680a4a4dc7fc11803a0c1cbf479ff0572f8956af8ae10df3d79e27fc7f9ad59836102f26073455a1309129b5aae2b37ea77990f01809e5b2efe1309d303109e297ab37b47d3860298f56d973ec49dd54cdebe28b054a0389ff498461eeb97b52e091b6b1e9612592a1a783df5a2de8dcdc75579b6655c168678fdd881d27462dcef41eb915e8ec2f31c219f14669515289c78031a60dc5afbf3ebf24a8ac9c54d017d4d2e34cd75f4042f602c20bb52ca1869893224465ef2dfd720684b6de52690f95699ca459dc3d19f2d34176adfaeee13dc096533ee41e4adababeeba4ffa15ea93b2d0e643411578b9ef9267659b93d33d909243ff1d8ab3da8c4db0c07f08e7deabe85a2fb82f1dfb3d8bd986c0d60b7ae6468c231fd6a804de3033a807c591703c08983b4526de51f8b1420791f4480a96c44c294c454be94e658c38523f84aab9390e9e32053ea7d2164f97d19065af42e8c67422a56c3110360def67b40701bfb905f1d4c7ce6586111681ae16b22ce3dc391af94255fc5be99155c5dac14c1ab4f790dbd06510fd242b51e09d14e703c2ae67e9429bbe06ea4a471618c7b36dbae77a3130e51ef2a3c915ad4fac72e6f57b7f607d87915cda72fff0fe0a91d3a3e98771d3d166483d33ebc65e3fd77a8754558d756e2e62cf2fe02bdb56869b96bfeb979ff9800ca6c93d4834d13e177b56ab47a25c2359baec601de3d34098a1a369d4da43f46e7a82e7a6690921b211ca087fbd32440998aee67ee90d19f86c8c8bb9d69f455f5978eec974e03d39bd87cd6adba9a1e78a0a7f5693136171974db0388b98b27a44f9ade4712394529b74283f7faff9eca1f54b754b6c6eeb78d8a8aaee821474bff6b7a6c2cf8c44ac9ad5d5336b95a283ad7706f4352e5f5d8e9aa65ac6860bfebd0d93aa8a697c76350224f5fdc739ac969c0594f3290d8568f80d
sharedSecretServer length: 32 data: 1ad52621f3d9337ee0ae265cc432b9fbfffb9ba569752cb455966110c401fcab

* * * decapsulate the keyToEncrypt with the private key of the recipient * * *
sharedSecretClient length: 32 data: 1ad52621f3d9337ee0ae265cc432b9fbfffb9ba569752cb455966110c401fcab

information from Liboqs about used algorithm:
KEM Details:
  Name: NTRU-HRSS-701
  Version: https://github.com/jschanck/ntru/tree/a43a4457 reference implementation
  Claimed NIST level: 3
  Is IND-CCA: true
  Length public key (bytes): 1138
  Length secret key (bytes): 1450
  Length ciphertext (bytes): 1138
  Length shared secret (bytes): 32
