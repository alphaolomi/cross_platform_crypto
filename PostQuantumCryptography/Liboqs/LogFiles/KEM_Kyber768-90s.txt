PQC key encapsulation mechanism (KEM) using
OpenQuantumSafe.org liboqs-java library
KEM algorithm: Kyber768-90s

*** generate a key pair for client=receiver and server=sender ***
generated private key length: 2400
generated public key length:  1184
private and public key for server and client saved to file

* * * generate the keyToEncrypt with the public key of the recipient * * *
length of the received clientPublicKey: 1184
encryptedKey length: 1088 data: f61c52ae23cc5f9b52b286829a739da32fbdd8580093bbe149124004bf4b10403875e221319fafe4935295f9caef5f2143a5ba5b338396bd3bcd4022553dc412733fda386d098ad9be472bb44116505e1e54ae17de6d6b5e7ea58737c385a31f4aec77c923f3b4e1b1aaa5a02267b6f6ef1f413b77175141ddf8f0aa7bb77ff51f22cced398c8fef621243f4830bb6e5ea22c7d4c7570055e9071bb5f4b419d7fff5e2f8e5aba26dbe02f3f4b2be317ace4edbc5314f2223395bcebb8d25a39e0956416c62c42bc1df9e0b73c1d862eca4c80078909e3e7030537f6582de6a4044787e4323801d9113356bde3604f5e02031b580c4703c8f72d237ddd700b051545f829c44a31ba81acf104735884d6097494e9c2ad03204cb78222e7514321f9aa36241b36c92a6d4de9b455a626463cb83ab88897d7d697be10aa8e313512f4574c01d5c77307851de654d23c70d1f477d2bc9d024109fdc09dcca39977ad27ecc9d05c5881c0bc84fe88d9ff73403739d340d9bbe0e340bf0e5590f4e766b0d1ae16b0c55873ee2dfd7766240fec46ad5fff6cf1df4d19faa76b4b0f75d4d15720a2d62e8f0e0330a9128753b04d62441295b2b683f118f2505b6191f4942f934c96f5d4b87ea3eb6eb4a7c530da13f734b43e08f5e465f2d521fc15ee7529a6d0cb87a2f845a15980a0ae83bc492f449cf58ebba2e0fe744ce3cb863279a78243dee4ceb00012fd13ed7bb3a782fe19ea9e3989da102adb026d0650802b83b50da2391b63fbf6fb0342c78baf9dc1def08f5c9c5c08f125c3afaf72a08a60796af2da5a220b0b957c3f2ad1b42e52fe146731b169544bea808af96da61e810b4b67bfcb66e85676589cb838b1e680fa4cf0a665d03c5c6efd672ff4e8c101d271f75d51b0154d4558d267b8998f061b7db1ab2332376149404ec613facb6a4175bc8184033b1a19101e9edde9e3f17fc54b117eb2b51b12969a959b77114c1533b0593ab7e50ba8c5b997f6e20d08173ea2aec945ab276b25fdc39f04362de15bcf8d9ab8a9c716319c53c7e2f87c41bf194ee5a833e998b4b9465fd432cfc291ee21ac96279c21c5443159b696edd05b18c9054ce87498f704dcd6c0e4b5e5a08a224a6833dbb2fbb9700ed3c9851fdf0b7fd64dd24102666c105c9079bd9b1a26201326eff55fd55a32b5786f33fe4fcc115bfcbf185984d089a7b3ab81dbeead10dd8ee2accedfa12dd30c51861dbe7318efca4b5710dfd17e0a1471ab895234c12ac84560dc8167dafb7e7763b21630bcf44b9ce95128058fb90df70c3858e460c7ed732fc423a375df5925cb46d7bd113281e91ef7724bdcef09f0f03a500d96cda99edc1dd68f6b2182cd5d97e3bee9f8f72a77fa96f6e6ba8601513df6665e0083fbd7afb11a5b3c34994a06af2e99b8dfb6528e34362533f0486a5874f29a4ea3361c823fd7e5ac44eb02fae44564dbc3927667d1c8b4b918b7cfb36a18f289a2bae993c2650dad72c4763300ea8990087e3ddcc84b7be248916
sharedSecretServer length: 32 data: d9e137c8898fbe683cff11e165c3c021266fd2146f251a84cbb16d7e169d78d1

* * * decapsulate the keyToEncrypt with the private key of the recipient * * *
sharedSecretClient length: 32 data: d9e137c8898fbe683cff11e165c3c021266fd2146f251a84cbb16d7e169d78d1

information from Liboqs about used algorithm:
KEM Details:
  Name: Kyber768-90s
  Version: https://github.com/pq-crystals/kyber/commit/74cad307858b61e434490c75f812cb9b9ef7279b
  Claimed NIST level: 1
  Is IND-CCA: true
  Length public key (bytes): 1184
  Length secret key (bytes): 2400
  Length ciphertext (bytes): 1088
  Length shared secret (bytes): 32
