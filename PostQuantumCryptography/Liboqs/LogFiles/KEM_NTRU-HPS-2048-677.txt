PQC key encapsulation mechanism (KEM) using
OpenQuantumSafe.org liboqs-java library
KEM algorithm: NTRU-HPS-2048-677

*** generate a key pair for client=receiver and server=sender ***
generated private key length: 1234
generated public key length:  930
private and public key for server and client saved to file

* * * generate the keyToEncrypt with the public key of the recipient * * *
length of the received clientPublicKey: 930
encryptedKey length: 930 data: bc96a23f79841d848ce09e4eba4e1fa35a7f86e778f662f4e3c3f26adc41ca041163458fe1c8b34b00f362fd89694a4a287855e9615af7abcd74726214bb44a3317f6ec8de6f67feafc96182c7de79ccf1984d8da5188ee8731c7a8ce7e3d7d052d522342a8d5edfb6664d9c792cab44ab2cabf4dbbaa6c2e7733fb74dbc0ee3c257e58e6a9746bb7b6c2cb31c4403fc066d9588ffc623f66bf36ba2b68dee314322e36e487f48ee9abdee928fd9226482763ffa47e252baef8648314d90832512ca726a236f6d2840ee78cde620ab2877a639f7311b6dbd885f2329e7f4a353bf0610f3662ef89ee1319b39862609428f916b811d20701051c44c1b71427041d2bb50750a7cf9a9c12d7811c92d87a4062d5644a7fef3d32885502a853cee01d8ee87fbe7bb88118229504c769c4a41dcd2e120cdb3fff289002b55fa71f68a09a2208beaca41b78254bc4404c4b8fb2446ed0062c82769f08f2644a78202a65a0b27f223d49dbab7a84ebbde66a1a3e26481f2769c9d8c7a90878adab6c324268963277dbdb770573648971bc3a1572987b7b0df8ede66788bf3e5204b996bf2e4aafc48f3e3979581bc88ed89de9730eb3f4b7d8358ec7001b3ab398109a26e27c117759c08095d829d057630c325345acab8a76dd2f0eec04cdb5144f76e1289e103e19d322720a98f0b4dcc100c7ccfe1d81501d19a46c92784ae9c35772f8b9b711a1b66f9c2f2557f25d85f9173053e5d8d0addbd991a86d83ca02b32cdf00111f2e860c28ab348486eb60b8613dcf6cfc698f4cd9118a27b6169f90c24e8e731564cbb0fbd72db638deefdf7186c7256da742c5b7a0c5322a20e2b6dbdd5c928c76c1b4e6d04d3c89c3996e0701a7e1a1a561b47728a00296e0a5d154e6999dfc46bdac8f1d395c4e1b48c1572cbfbc774bc9a379ae9392ad867bda41231895a526bf754aae971c555087b5480263d7262b94075071071a5fc91389451f677d03a26f0275f1763fac1750a49417ec6edd1c917db6b7844515ba4fce27628a26a5fc569b2512d3afed8157e6d07c5b8f3e2600a838814fc6369da45302d6368a008e6ed17bc1b48bd92c8ec874e8219fcce1256707a412876e29cfe5f693906b668883c7a9a5a014c2bd1f778fea83986d91912a9cdeef120aa0581c94caeda4dfa660b037196c48489391fc122868606c79d122d1969087b9a9902c1bea6b3cf83df73a0550a070c9941736ed787f7bfa73205b5682db621ef3bfe2514c2c616d1b39be802767b2d032e946ba9d4cf517ac0fb34110d77dfce079e59020e
sharedSecretServer length: 32 data: c40bef0ee9c3a03925664f52daef7e6d60dcbbbb29c6d47ad21c16d961e12ca2

* * * decapsulate the keyToEncrypt with the private key of the recipient * * *
sharedSecretClient length: 32 data: c40bef0ee9c3a03925664f52daef7e6d60dcbbbb29c6d47ad21c16d961e12ca2

information from Liboqs about used algorithm:
KEM Details:
  Name: NTRU-HPS-2048-677
  Version: https://github.com/jschanck/ntru/tree/a43a4457 reference implementation
  Claimed NIST level: 3
  Is IND-CCA: true
  Length public key (bytes): 930
  Length secret key (bytes): 1234
  Length ciphertext (bytes): 930
  Length shared secret (bytes): 32
